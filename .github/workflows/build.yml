name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build for'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - windows
        - macos
        - linux

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            arch: x64
          - os: windows-latest
            platform: windows
            arch: arm64
          - os: macos-latest
            platform: macos
            arch: x64
          - os: macos-latest
            platform: macos
            arch: arm64
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
          - os: ubuntu-latest
            platform: linux
            arch: armv7l

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup icons for build
      run: |
        # Create placeholder icons if they don't exist
        if [ ! -f "assets/icon.icns" ]; then
          echo "Creating placeholder macOS icon..."
          # Convert PNG to ICNS using sips (macOS only)
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            mkdir -p assets/icon.iconset
            sips -z 16 16 assets/icon.png --out assets/icon.iconset/icon_16x16.png
            sips -z 32 32 assets/icon.png --out assets/icon.iconset/icon_16x16@2x.png
            sips -z 32 32 assets/icon.png --out assets/icon.iconset/icon_32x32.png
            sips -z 64 64 assets/icon.png --out assets/icon.iconset/icon_32x32@2x.png
            sips -z 128 128 assets/icon.png --out assets/icon.iconset/icon_128x128.png
            sips -z 256 256 assets/icon.png --out assets/icon.iconset/icon_128x128@2x.png
            sips -z 256 256 assets/icon.png --out assets/icon.iconset/icon_256x256.png
            sips -z 512 512 assets/icon.png --out assets/icon.iconset/icon_256x256@2x.png
            sips -z 512 512 assets/icon.png --out assets/icon.iconset/icon_512x512.png
            sips -z 1024 1024 assets/icon.png --out assets/icon.iconset/icon_512x512@2x.png
            iconutil -c icns assets/icon.iconset -o assets/icon.icns
          fi
        fi
        
        if [ ! -f "assets/icon.ico" ]; then
          echo "Creating placeholder Windows icon..."
          # For Windows, we'll use the PNG as is and let electron-builder handle conversion
          cp assets/icon.png assets/icon.ico
        fi

    - name: Build application
      run: |
        if [ "${{ matrix.platform }}" == "windows" ]; then
          npm run build:win-${{ matrix.arch }}
        elif [ "${{ matrix.platform }}" == "macos" ]; then
          npm run build:mac-${{ matrix.arch }}
        elif [ "${{ matrix.platform }}" == "linux" ]; then
          npm run build:linux-${{ matrix.arch }}
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-${{ matrix.arch }}
        path: dist/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/*/dist/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-single:
    runs-on: ${{ matrix.os }}
    if: github.event.inputs.platform != 'all'
    strategy:
      matrix:
        os: ${{ github.event.inputs.platform == 'windows' && 'windows-latest' || github.event.inputs.platform == 'macos' && 'macos-latest' || 'ubuntu-latest' }}
        platform: ${{ github.event.inputs.platform }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup Linux dependencies
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Setup icons for build
      run: |
        # Create placeholder icons if they don't exist
        if [ ! -f "assets/icon.icns" ]; then
          echo "Creating placeholder macOS icon..."
          # Convert PNG to ICNS using sips (macOS only)
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            mkdir -p assets/icon.iconset
            sips -z 16 16 assets/icon.png --out assets/icon.iconset/icon_16x16.png
            sips -z 32 32 assets/icon.png --out assets/icon.iconset/icon_16x16@2x.png
            sips -z 32 32 assets/icon.png --out assets/icon.iconset/icon_32x32.png
            sips -z 64 64 assets/icon.png --out assets/icon.iconset/icon_32x32@2x.png
            sips -z 128 128 assets/icon.png --out assets/icon.iconset/icon_128x128.png
            sips -z 256 256 assets/icon.png --out assets/icon.iconset/icon_128x128@2x.png
            sips -z 256 256 assets/icon.png --out assets/icon.iconset/icon_256x256.png
            sips -z 512 512 assets/icon.png --out assets/icon.iconset/icon_256x256@2x.png
            sips -z 512 512 assets/icon.png --out assets/icon.iconset/icon_512x512.png
            sips -z 1024 1024 assets/icon.png --out assets/icon.iconset/icon_512x512@2x.png
            iconutil -c icns assets/icon.iconset -o assets/icon.icns
          fi
        fi
        
        if [ ! -f "assets/icon.ico" ]; then
          echo "Creating placeholder Windows icon..."
          # For Windows, we'll use the PNG as is and let electron-builder handle conversion
          cp assets/icon.png assets/icon.ico
        fi

    - name: Build application
      run: |
        if [ "${{ matrix.platform }}" == "windows" ]; then
          npm run build:win
        elif [ "${{ matrix.platform }}" == "macos" ]; then
          npm run build:mac
        elif [ "${{ matrix.platform }}" == "linux" ]; then
          npm run build:linux
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-build
        path: dist/
        retention-days: 30 